package Lego2.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(5);
  /*package*/ final ConceptDescriptor myConceptCmd = createDescriptorForCmd();
  /*package*/ final ConceptDescriptor myConceptFwd = createDescriptorForFwd();
  /*package*/ final ConceptDescriptor myConceptLeft = createDescriptorForLeft();
  /*package*/ final ConceptDescriptor myConceptRight = createDescriptorForRight();
  /*package*/ final ConceptDescriptor myConceptRoute = createDescriptorForRoute();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptCmd.getId(), 0);
    myIndexMap.put(myConceptFwd.getId(), 1);
    myIndexMap.put(myConceptLeft.getId(), 2);
    myIndexMap.put(myConceptRight.getId(), 3);
    myIndexMap.put(myConceptRoute.getId(), 4);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCmd, myConceptFwd, myConceptLeft, myConceptRight, myConceptRoute);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptCmd;
      case 1:
        return myConceptFwd;
      case 2:
        return myConceptLeft;
      case 3:
        return myConceptRight;
      case 4:
        return myConceptRoute;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForCmd() {
    return new ConceptDescriptorBuilder("Lego2.structure.Cmd", MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223badceL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).alias("command", "").sourceNode(new SNodePointer("r:0bab23f2-7522-4039-b58b-542c2e2539f8(Lego2.structure)", "1901822991100784078")).create();
  }
  private static ConceptDescriptor createDescriptorForFwd() {
    return new ConceptDescriptorBuilder("Lego2.structure.Fwd", MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223badeaL)).super_("Lego2.structure.Cmd").version(1).super_(MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223badceL)).parents("Lego2.structure.Cmd").parentIds(MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223badceL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x1a64a1ef223bae09L, "distance", new SNodePointer("r:0bab23f2-7522-4039-b58b-542c2e2539f8(Lego2.structure)", "1901822991100784137"))).properties("distance").alias("Fwd", "").sourceNode(new SNodePointer("r:0bab23f2-7522-4039-b58b-542c2e2539f8(Lego2.structure)", "1901822991100784106")).create();
  }
  private static ConceptDescriptor createDescriptorForLeft() {
    return new ConceptDescriptorBuilder("Lego2.structure.Left", MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223df524L)).super_("Lego2.structure.Cmd").version(1).super_(MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223badceL)).parents("Lego2.structure.Cmd").parentIds(MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223badceL)).alias("Left", "").sourceNode(new SNodePointer("r:0bab23f2-7522-4039-b58b-542c2e2539f8(Lego2.structure)", "1901822991100933412")).create();
  }
  private static ConceptDescriptor createDescriptorForRight() {
    return new ConceptDescriptorBuilder("Lego2.structure.Right", MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223bae2fL)).super_("Lego2.structure.Cmd").version(1).super_(MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223badceL)).parents("Lego2.structure.Cmd").parentIds(MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223badceL)).alias("Right", "").sourceNode(new SNodePointer("r:0bab23f2-7522-4039-b58b-542c2e2539f8(Lego2.structure)", "1901822991100784175")).create();
  }
  private static ConceptDescriptor createDescriptorForRoute() {
    return new ConceptDescriptorBuilder("Lego2.structure.Route", MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223bad65L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.execution.util.structure.IMainClass").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1a64a1ef223bae70L, "Cmds", MetaIdFactory.conceptId(0x36d35b3e5a784042L, 0x8b0ed6682dd36f87L, 0x1a64a1ef223badceL), true, true, false, new SNodePointer("r:0bab23f2-7522-4039-b58b-542c2e2539f8(Lego2.structure)", "1901822991100784240"))).children(new String[]{"Cmds"}, new boolean[]{true}).rootable().alias("Route", "").sourceNode(new SNodePointer("r:0bab23f2-7522-4039-b58b-542c2e2539f8(Lego2.structure)", "1901822991100783973")).create();
  }
}
